{
    "swagger": "2.0",
    "info": { "version": "6.20.61", "title": "Partner.Net Data-API Web Application" },
    "host": "data.auto-partner.net",
    "basePath": "/data",
    "tags": [
        { "name": "ContractTypes", "description": "Interface for retrieving contract types" },
        { "name": "Applications", "description": "Interface for retrieving applications" },
        { "name": "ContractStates", "description": "Interface for retrieving contract states" },
        { "name": "CompanyGroups", "description": "Interface for retrieving company groups" },
        { "name": "ExternalBrands", "description": "Interface for retrieving external brands" },
        { "name": "Functions", "description": "Interface for retrieving functions" },
        { "name": "CompanyNumberTypes", "description": "Interface for retrieving company number types" },
        { "name": "CompanyTypes", "description": "Interface for retrieving company types" },
        { "name": "NumberTypes", "description": "Interface for retrieving number types" },
        { "name": "CompanyGroupTypes", "description": "Interface for retrieving company group types" },
        { "name": "Companies", "description": "Interface for retrieving companies" },
        { "name": "Brands", "description": "Interface for retrieving brands" },
        { "name": "Persons", "description": "Interface for retrieving persons" },
        { "name": "About", "description": "Interface for retrieving information about the pnet-data-api" },
        { "name": "Activities", "description": "Interface for retrieving activities" },
        { "name": "AdvisorTypes", "description": "Interface for retrieving advisor types" }
    ],
    "paths": {
        "/api/v1/about/": {
            "get": {
                "tags": ["About"],
                "summary": "about",
                "description": "Retrieves some basic informations about the data API.",
                "operationId": "aboutUsingGET",
                "produces": ["application/json"],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/AboutDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/activities/details": {
            "get": {
                "tags": ["Activities"],
                "summary": "get all activities",
                "description": "Retrieves a ResultPage containing activities that match the requested matchcodes.",
                "operationId": "getAllUsingGET",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«ActivityDataDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/activities/details/{matchcode}": {
            "get": {
                "tags": ["Activities"],
                "summary": "get activity",
                "description": "Retrieves an activity with a specific matchcode.",
                "operationId": "getUsingGET",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ActivityDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/activities/find": {
            "get": {
                "tags": ["Activities"],
                "summary": "find activities",
                "description": "Finds multiple activities each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "b",
                        "in": "query",
                        "description": "One or more brands for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyType",
                        "in": "query",
                        "description": "One or more matchode of company types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "contractType",
                        "in": "query",
                        "description": "One or more matchode of contract types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "scroll",
                        "in": "query",
                        "description": "True, to enable scrolling for large results.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "allowEmptyValue": false,
                        "x-example": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«ActivityItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/activities/next/{scrollId}": {
            "get": {
                "tags": ["Activities"],
                "summary": "scroll activities",
                "description": "Returns the next page of the previous scroll operation.",
                "operationId": "nextUsingGET",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "scrollId",
                        "in": "path",
                        "description": "The scroll ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«ActivityItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/activities/search": {
            "get": {
                "tags": ["Activities"],
                "summary": "search for activities",
                "description": "Searches for activities with the specified query. If one or more filters are set each filter will be applied (AND) and one of the values of each filter must match (OR).",
                "operationId": "searchUsingGET",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "b",
                        "in": "query",
                        "description": "One or more brands for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyType",
                        "in": "query",
                        "description": "One or more matchode of company types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "contractType",
                        "in": "query",
                        "description": "One or more matchode of contract types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«ActivityItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/advisortypes/details": {
            "get": {
                "tags": ["AdvisorTypes"],
                "summary": "get all advisor types",
                "description": "Retrieves a ResultPage containing advisor types that match the requested matchcodes.",
                "operationId": "getAllUsingGET_1",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«AdvisorTypeDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/advisortypes/details/{matchcode}": {
            "get": {
                "tags": ["AdvisorTypes"],
                "summary": "get an advisor type",
                "description": "Retrieves an advisor type with a specific matchcode.",
                "operationId": "getUsingGET_1",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/AdvisorTypeDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/advisortypes/find": {
            "get": {
                "tags": ["AdvisorTypes"],
                "summary": "find advisor types",
                "description": "Finds multiple advisor types each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_1",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«AdvisorTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/advisortypes/search": {
            "get": {
                "tags": ["AdvisorTypes"],
                "summary": "search for advisor types",
                "description": "Searches for advisor types with the specified query.",
                "operationId": "searchUsingGET_1",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«AdvisorTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/applications/details": {
            "get": {
                "tags": ["Applications"],
                "summary": "get all applications",
                "description": "Retrieves a ResultPage containing applications that match the requested matchcodes.",
                "operationId": "getAllUsingGET_2",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ApplicationDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/applications/details/{matchcode}": {
            "get": {
                "tags": ["Applications"],
                "summary": "get activity",
                "description": "Retrieves an application with a specific matchcode.",
                "operationId": "getUsingGET_2",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ApplicationDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/applications/find": {
            "get": {
                "tags": ["Applications"],
                "summary": "find applications",
                "description": "Finds multiple applications each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_2",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "scroll",
                        "in": "query",
                        "description": "True, to enable scrolling for large results.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "allowEmptyValue": false,
                        "x-example": false
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ApplicationItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/applications/next/{scrollId}": {
            "get": {
                "tags": ["Applications"],
                "summary": "scroll applications",
                "description": "Returns the next page of the previous scroll operation.",
                "operationId": "nextUsingGET_1",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "scrollId",
                        "in": "path",
                        "description": "The scroll ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ApplicationItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/applications/search": {
            "get": {
                "tags": ["Applications"],
                "summary": "search for applications",
                "description": "Searches for applications with the specified query.",
                "operationId": "searchUsingGET_2",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ApplicationItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/brands/details": {
            "get": {
                "tags": ["Brands"],
                "summary": "get all brands",
                "description": "Retrieves a ResultPage containing brands that match the requested matchcodes.",
                "operationId": "getAllUsingGET_3",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«BrandDataDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/brands/details/{matchcode}": {
            "get": {
                "tags": ["Brands"],
                "summary": "get brand",
                "description": "Retrieves a brand with a specific matchcode.",
                "operationId": "getUsingGET_3",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/BrandDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/brands/find": {
            "get": {
                "tags": ["Brands"],
                "summary": "find brands",
                "description": "Finds multiple brands each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_3",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«BrandItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/brands/search": {
            "get": {
                "tags": ["Brands"],
                "summary": "search for brands",
                "description": "Searches for brands with the specified query. If one or more filters are set each filter will be applied (AND) and one of the values of each filter must match (OR).",
                "operationId": "searchUsingGET_3",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«BrandItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companies/details": {
            "get": {
                "tags": ["Companies"],
                "summary": "get all companies",
                "description": "Returns multiple companies each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "getAllUsingGET_4",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "commercialRegisterNumber",
                        "in": "query",
                        "description": "One or more FB numbers for filtering the result. The case will be ignored.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyNumber",
                        "in": "query",
                        "description": "One or more company numbers for filtering the result. Leading zeros will be trimmed.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dataProcessingRegisterNumber",
                        "in": "query",
                        "description": "One or more DVR numbers for filtering the result. The case will be ignored.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "One or more emails for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "iban",
                        "in": "query",
                        "description": "One or more IBANs for filtering the result. The case will be ignored.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "One or more IDs for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "merge",
                        "in": "query",
                        "description": "Merge companies by a group type.",
                        "required": false,
                        "type": "string",
                        "default": "NONE",
                        "allowEmptyValue": false,
                        "x-example": "INTERNET_GROUP",
                        "enum": ["NONE", "INTERET_GROUP"]
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "sapNumber",
                        "in": "query",
                        "description": "One or more SAP numbers for filtering the result. Leading zeros will be trimmed.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "vatIdNumber",
                        "in": "query",
                        "description": "One or more VAT ID numbers for filtering the result. The case will be ignored.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«CompanyDataDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companies/details/{id}": {
            "get": {
                "tags": ["Companies"],
                "summary": "get company",
                "description": "Retrieves a company with a specific id.",
                "operationId": "getUsingGET_4",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID (also known as GP-ID) of the company.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "merge",
                        "in": "query",
                        "description": "Merge companies by a group type.",
                        "required": false,
                        "type": "string",
                        "default": "NONE",
                        "allowEmptyValue": false,
                        "x-example": "INTERNET_GROUP",
                        "enum": ["NONE", "INTERET_GROUP"]
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/CompanyDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companies/find": {
            "get": {
                "tags": ["Companies"],
                "summary": "find companies",
                "description": "Finds multiple companies each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_4",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "b",
                        "in": "query",
                        "description": "One or more brands for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyNumber",
                        "in": "query",
                        "description": "one or more company numbers",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "contractType",
                        "in": "query",
                        "description": "One or more matchode of contract types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "the two character country code",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalBrand",
                        "in": "query",
                        "description": "the matchcodes of the external brand",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "One or more IDs for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "One or more GeoPoints for filtering the result. One GeoPoint consists of \"lon\" (the longitude), \"lat\" (the latitude) and the \"distance\" in meter.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "one or more company matchcodes (= administrative tenant + company number)",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "merge",
                        "in": "query",
                        "description": "Merge companies by a group type.",
                        "required": false,
                        "type": "string",
                        "default": "NONE",
                        "allowEmptyValue": false,
                        "x-example": "INTERNET_GROUP",
                        "enum": ["NONE", "INTERET_GROUP"]
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "postalCode",
                        "in": "query",
                        "description": "One or more ZIPs for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "scroll",
                        "in": "query",
                        "description": "True, to enable scrolling for large results.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "allowEmptyValue": false,
                        "x-example": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "the matchcode of the company type",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«CompanyItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companies/next/{scrollId}": {
            "get": {
                "tags": ["Companies"],
                "summary": "scroll companies",
                "description": "Returns the next page of the previous scroll operation.",
                "operationId": "nextUsingGET_2",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "scrollId",
                        "in": "path",
                        "description": "The scroll ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«CompanyItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companies/search": {
            "get": {
                "tags": ["Companies"],
                "summary": "search for companies",
                "description": "Searches for companies with the specified query. If one or more filters are set each filter will be applied (AND) and one of the values of each filter must match (OR).",
                "operationId": "searchUsingGET_4",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "aggregate",
                        "in": "query",
                        "description": "Additional aggregation, supported are: number-per-tenant, number-per-brand, number-per-type, number-per-contract-type",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "b",
                        "in": "query",
                        "description": "One or more brands for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "contractType",
                        "in": "query",
                        "description": "One or more matchode of contract types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "the two character country code",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalBrand",
                        "in": "query",
                        "description": "the matchcodes of the external brand",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "one or more GeoPoints in the format: {\"lat\":47.817,\"lon\":13.051,\"distance\":100.0} (distance in meters)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "merge",
                        "in": "query",
                        "description": "Merge companies by a group type.",
                        "required": false,
                        "type": "string",
                        "default": "NONE",
                        "allowEmptyValue": false,
                        "x-example": "INTERNET_GROUP",
                        "enum": ["NONE", "INTERET_GROUP"]
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "the matchcode of the company type",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«CompanyItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companygroups/details": {
            "get": {
                "tags": ["CompanyGroups"],
                "summary": "get all company groups",
                "description": "Returns multiple company groups each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "getAllUsingGET_5",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "description": "One of more company matchcodes of group member. The leading company is included here, too.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyId",
                        "in": "query",
                        "description": "One of more company ids of group member. The leading company is included here, too.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyNumber",
                        "in": "query",
                        "description": "One of more company numbers of group member. The leading company is included here, too.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "leadingCompany",
                        "in": "query",
                        "description": "One of more company matchcodes (tenant + number) of group leading companies.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "leadingCompanyId",
                        "in": "query",
                        "description": "One of more company ids of group leading companies.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "leadingCompanyNumber",
                        "in": "query",
                        "description": "One of more company numbers of group leading companies.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "p",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "pp",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "scroll",
                        "in": "query",
                        "description": "True, to enable scrolling for large results.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "allowEmptyValue": false,
                        "x-example": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyGroupDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companygroups/next/{scrollId}": {
            "get": {
                "tags": ["CompanyGroups"],
                "summary": "scroll company groups",
                "description": "Returns the next page of the previous scroll operation.",
                "operationId": "nextUsingGET_3",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "scrollId",
                        "in": "path",
                        "description": "The scroll ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyGroupDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companygrouptypes/details": {
            "get": {
                "tags": ["CompanyGroupTypes"],
                "summary": "get all company group types",
                "description": "Retrieves a ResultPage containing company group types that match the requested matchcodes.",
                "operationId": "getAllUsingGET_6",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyGroupTypeDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companygrouptypes/details/{matchcode}": {
            "get": {
                "tags": ["CompanyGroupTypes"],
                "summary": "get company group type",
                "description": "Retrieves a company group type with a specific matchcode.",
                "operationId": "getUsingGET_5",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/CompanyGroupTypeDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companygrouptypes/find": {
            "get": {
                "tags": ["CompanyGroupTypes"],
                "summary": "find company group types",
                "description": "Finds multiple company group types each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_5",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyGroupTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companygrouptypes/search": {
            "get": {
                "tags": ["CompanyGroupTypes"],
                "summary": "search for company group types",
                "description": "Searches for company group types with the specified query.",
                "operationId": "searchUsingGET_5",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyGroupTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companynumbertypes/details": {
            "get": {
                "tags": ["CompanyNumberTypes"],
                "summary": "get all company number types",
                "description": "Retrieves a ResultPage containing company number types that match the requested matchcodes.",
                "operationId": "getAllUsingGET_7",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyNumberTypeDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companynumbertypes/details/{matchcode}": {
            "get": {
                "tags": ["CompanyNumberTypes"],
                "summary": "get company number type",
                "description": "Retrieves a company number type with a specific matchcode.",
                "operationId": "getUsingGET_6",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/CompanyNumberTypeDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companynumbertypes/find": {
            "get": {
                "tags": ["CompanyNumberTypes"],
                "summary": "find company number types",
                "description": "Finds multiple company number types each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_6",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyNumberTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companynumbertypes/search": {
            "get": {
                "tags": ["CompanyNumberTypes"],
                "summary": "search for company number types",
                "description": "Searches for company number types with the specified query.",
                "operationId": "searchUsingGET_6",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyNumberTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companytypes/details": {
            "get": {
                "tags": ["CompanyTypes"],
                "summary": "get all company types",
                "description": "Retrieves a ResultPage containing company types that match the requested matchcodes.",
                "operationId": "getAllUsingGET_8",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyTypeDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companytypes/details/{matchcode}": {
            "get": {
                "tags": ["CompanyTypes"],
                "summary": "get company type",
                "description": "Retrieves a company type with a specific matchcode.",
                "operationId": "getUsingGET_7",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/CompanyTypeDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companytypes/find": {
            "get": {
                "tags": ["CompanyTypes"],
                "summary": "find company types",
                "description": "Finds multiple company types each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_7",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/companytypes/search": {
            "get": {
                "tags": ["CompanyTypes"],
                "summary": "search for company types",
                "description": "Searches for company types with the specified query.",
                "operationId": "searchUsingGET_7",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«CompanyTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/contractstates/details": {
            "get": {
                "tags": ["ContractStates"],
                "summary": "get all contract states",
                "description": "Retrieves a ResultPage containing contract states that match the requested matchcodes.",
                "operationId": "getAllUsingGET_9",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ContractStateDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/contractstates/details/{matchcode}": {
            "get": {
                "tags": ["ContractStates"],
                "summary": "get contract states",
                "description": "Retrieves a contract states with a specific matchcode.",
                "operationId": "getUsingGET_8",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ContractStateDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/contractstates/find": {
            "get": {
                "tags": ["ContractStates"],
                "summary": "find contract states",
                "description": "Finds multiple contract states each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_8",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ContractStateItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/contractstates/search": {
            "get": {
                "tags": ["ContractStates"],
                "summary": "search for contract states",
                "description": "Searches for contract states with the specified query.",
                "operationId": "searchUsingGET_8",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ContractStateItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/contracttypes/details": {
            "get": {
                "tags": ["ContractTypes"],
                "summary": "get all contract types",
                "description": "Retrieves a ResultPage containing contract types that match the requested matchcodes.",
                "operationId": "getAllUsingGET_10",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ContractTypeDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/contracttypes/details/{matchcode}": {
            "get": {
                "tags": ["ContractTypes"],
                "summary": "get contract type",
                "description": "Retrieves a contract type with a specific matchcode.",
                "operationId": "getUsingGET_9",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ContractTypeDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/contracttypes/find": {
            "get": {
                "tags": ["ContractTypes"],
                "summary": "find contract types",
                "description": "Finds multiple contract types each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_9",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "b",
                        "in": "query",
                        "description": "One or more brands for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "b",
                        "in": "query",
                        "description": "the matchcodes for contract states",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ContractTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/contracttypes/search": {
            "get": {
                "tags": ["ContractTypes"],
                "summary": "search for contract types",
                "description": "Searches for contract types with the specified query. If one or more filters are set each filter will be applied (AND) and one of the values of each filter must match (OR).",
                "operationId": "searchUsingGET_9",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "b",
                        "in": "query",
                        "description": "One or more brands for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ContractTypeItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/externalbrands/details": {
            "get": {
                "tags": ["ExternalBrands"],
                "summary": "get all external brands",
                "description": "Retrieves a ResultPage containing external brands that match the requested matchcodes.",
                "operationId": "getAllUsingGET_11",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "One or more IDs for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ExternalBrandDataDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/externalbrands/details/{matchcode}": {
            "get": {
                "tags": ["ExternalBrands"],
                "summary": "get external brand",
                "description": "Retrieves an external brand with a specific matchcode.",
                "operationId": "getUsingGET_10",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ExternalBrandDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/externalbrands/find": {
            "get": {
                "tags": ["ExternalBrands"],
                "summary": "find external brands",
                "description": "Finds multiple external brands each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_10",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "One or more IDs for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ExternalBrandItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/externalbrands/search": {
            "get": {
                "tags": ["ExternalBrands"],
                "summary": "search for external brands",
                "description": "Searches for external brands with the specified query.",
                "operationId": "searchUsingGET_10",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/ResultPage«ExternalBrandItemDTO»" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/functions/details": {
            "get": {
                "tags": ["Functions"],
                "summary": "get all functions",
                "description": "Retrieves a ResultPage containing functions that match the requested matchcodes.",
                "operationId": "getAllUsingGET_12",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«FunctionDataDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/functions/details/{matchcode}": {
            "get": {
                "tags": ["Functions"],
                "summary": "get function",
                "description": "Retrieves a function with a specific matchcode.",
                "operationId": "getUsingGET_11",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/FunctionDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/functions/find": {
            "get": {
                "tags": ["Functions"],
                "summary": "find functions",
                "description": "Finds multiple functions each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_11",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "activity",
                        "in": "query",
                        "description": "One or more matchode of activities.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "b",
                        "in": "query",
                        "description": "One or more brands for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyType",
                        "in": "query",
                        "description": "One or more matchode of company types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "contractType",
                        "in": "query",
                        "description": "One or more matchode of contract types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "numberType",
                        "in": "query",
                        "description": "the matchcodes of number types",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "scroll",
                        "in": "query",
                        "description": "True, to enable scrolling for large results.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "allowEmptyValue": false,
                        "x-example": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«FunctionItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/functions/next/{scrollId}": {
            "get": {
                "tags": ["Functions"],
                "summary": "scroll functions",
                "description": "Returns the next page of the previous scroll operation.",
                "operationId": "nextUsingGET_4",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "scrollId",
                        "in": "path",
                        "description": "The scroll ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«FunctionItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/functions/search": {
            "get": {
                "tags": ["Functions"],
                "summary": "search for functions",
                "description": "Searches for functions with the specified query. If one or more filters are set each filter will be applied (AND) and one of the values of each filter must match (OR).",
                "operationId": "searchUsingGET_11",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "activity",
                        "in": "query",
                        "description": "One or more matchode of activities.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "b",
                        "in": "query",
                        "description": "One or more brands for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyType",
                        "in": "query",
                        "description": "One or more matchode of company types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "contractType",
                        "in": "query",
                        "description": "One or more matchode of contract types for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "numberType",
                        "in": "query",
                        "description": "the matchcodes of number types",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«FunctionItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/numbertypes/details": {
            "get": {
                "tags": ["NumberTypes"],
                "summary": "get all number types",
                "description": "Retrieves a ResultPage containing number types that match the requested matchcodes.",
                "operationId": "getAllUsingGET_14",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": true,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«NumberTypeDataDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/numbertypes/details/{matchcode}": {
            "get": {
                "tags": ["NumberTypes"],
                "summary": "get number type",
                "description": "Retrieves a number type with a specific matchcode.",
                "operationId": "getUsingGET_13",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "matchcode",
                        "in": "path",
                        "description": "One matchcode.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/NumberTypeDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/numbertypes/find": {
            "get": {
                "tags": ["NumberTypes"],
                "summary": "find number types",
                "description": "Finds multiple number types each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_12",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "mc",
                        "in": "query",
                        "description": "One or more matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«NumberTypeItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/numbertypes/search": {
            "get": {
                "tags": ["NumberTypes"],
                "summary": "search for number types",
                "description": "Searches for number types with the specified query.",
                "operationId": "searchUsingGET_12",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«NumberTypeItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/persons/details": {
            "get": {
                "tags": ["Persons"],
                "summary": "get all persons",
                "description": "Returns multiple persons each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "getAllUsingGET_15",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "the emails",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "the external ids",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "guid",
                        "in": "query",
                        "description": "the global user ids",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "One or more IDs for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "personnelNumber",
                        "in": "query",
                        "description": "the personnel numbers",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "preferredUserId",
                        "in": "query",
                        "description": "the preferred user ids",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«PersonDataDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/persons/details/{id}": {
            "get": {
                "tags": ["Persons"],
                "summary": "get person",
                "description": "Retrieves a person with a specific id.",
                "operationId": "getUsingGET_14",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID (also known as GP-ID) of the person.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 0
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/PersonDataDTO" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/persons/find": {
            "get": {
                "tags": ["Persons"],
                "summary": "find persons",
                "description": "Finds multiple persons each matching all specified restrictions. If one or more restrictions are set each restriction will be applied (AND) and one of the values of each restriction must match (OR).",
                "operationId": "findUsingGET_13",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "activity",
                        "in": "query",
                        "description": "One or more activity matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "advisorAssignmentCompany",
                        "in": "query",
                        "description": "One or more matchcodes of companies of the user's advisor assigments for filtering the result. A company matchcode is the result of the comcatination of tenant and company number.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "advisorAssignmentCompanyId",
                        "in": "query",
                        "description": "One or more ids of companies of the user's advisor assigments for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "advisorAssignmentCompanyNumber",
                        "in": "query",
                        "description": "One or more numbers of companies of the user's advisor assigments for filtering the result. You should be aware, that the numbers are only unique per tenant. Use company matchcodes for a unique reference.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "advisorAssignmentDivision",
                        "in": "query",
                        "description": "One or more matchcodes of the divisions of the user's advisor assigments for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "advisorAssignmentType",
                        "in": "query",
                        "description": "One or more matchcodes of the types of the user's advisor assigments for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "One or more company matchcodes for filtering the result. A company matchcode is the result of the comcatination of tenant and company number.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyId",
                        "in": "query",
                        "description": "One or more company ids for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyNumber",
                        "in": "query",
                        "description": "One or more company numbers for filtering the result. You should be aware, that the numbers are only unique per tenant. Use company matchcodes for a unique reference.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "controllingArea",
                        "in": "query",
                        "description": "One or more controlling areas for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "costCenter",
                        "in": "query",
                        "description": "One or more cost centers for filterin the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "One or more emails for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "One or more external ids of the person for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "function",
                        "in": "query",
                        "description": "One or more function matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "guid",
                        "in": "query",
                        "description": "One or more global user ids for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "One or more IDs for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "merge",
                        "in": "query",
                        "description": "Merge companies by a group type. This is only working, if there is a restriction by companies.",
                        "required": false,
                        "type": "string",
                        "default": "NONE",
                        "allowEmptyValue": false,
                        "x-example": "INTERNET_GROUP",
                        "enum": ["NONE", "INTERET_GROUP"]
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "personnelDepartment",
                        "in": "query",
                        "description": "One or more personnel departments for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "personnelNumber",
                        "in": "query",
                        "description": "One or more personnel number for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "preferredUserId",
                        "in": "query",
                        "description": "One or more preferred user ids for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "scroll",
                        "in": "query",
                        "description": "True, to enable scrolling for large results.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "allowEmptyValue": false,
                        "x-example": false
                    },
                    {
                        "name": "supervisorPersonnelNumber",
                        "in": "query",
                        "description": "One or more personnel number of the supervisor for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "up",
                        "in": "query",
                        "description": "The result will only contain items, that have been modified after the specified date and time.",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "allowEmptyValue": false,
                        "x-example": "1999-12-31T23:59:59"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«PersonItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/persons/next/{scrollId}": {
            "get": {
                "tags": ["Persons"],
                "summary": "scroll persons",
                "description": "Returns the next page of the previous scroll operation.",
                "operationId": "nextUsingGET_5",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "scrollId",
                        "in": "path",
                        "description": "The scroll ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«PersonItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/persons/portrait/{id}": {
            "get": {
                "tags": ["Persons"],
                "summary": "Get the portrait of a person.",
                "description": "Returns the binary portrait of the person.",
                "operationId": "getPersonImageUsingGET",
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the person.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of image, THUMBNAIL or ORIGINAL.",
                        "required": false,
                        "type": "string",
                        "default": "THUMBNAIL",
                        "allowEmptyValue": false,
                        "enum": ["THUMBNAIL", "ORIGINAL"]
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/InputStreamResource" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        },
        "/api/v1/persons/search": {
            "get": {
                "tags": ["Persons"],
                "summary": "search for persons",
                "description": "Searches for persons with the specified query. If one or more filters are set each filter will be applied (AND) and one of the values of each filter must match (OR).",
                "operationId": "searchUsingGET_13",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "activity",
                        "in": "query",
                        "description": "One or more activity matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "aggregate",
                        "in": "query",
                        "description": "Additional aggregation, supported are: number-per-tenant, number-per-company, number-per-function, number-per-activity",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "One or more company matchcodes for filtering the result. A company matchcode is the result of the comcatination of tenant and company number.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyId",
                        "in": "query",
                        "description": "One or more company ids for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "integer", "format": "int32" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "companyNumber",
                        "in": "query",
                        "description": "One or more company numbers for filtering the result. You should be aware, that the numbers are only unique per tenant. Use company matchcodes for a unique reference.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "function",
                        "in": "query",
                        "description": "One or more function matchcodes for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "The language for labels and descriptions in the result. Does not filter any items, even if the translation is missing.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "de"
                    },
                    {
                        "name": "merge",
                        "in": "query",
                        "description": "Merge companies by a group type. This is only working, if there is a restriction by companies.",
                        "required": false,
                        "type": "string",
                        "default": "NONE",
                        "allowEmptyValue": false,
                        "x-example": "INTERNET_GROUP",
                        "enum": ["NONE", "INTERET_GROUP"]
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "The index of the page (zero-based).",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 0
                    },
                    {
                        "name": "pp",
                        "in": "query",
                        "description": "The number of items per page.",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32",
                        "allowEmptyValue": false,
                        "x-example": 10
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query. May contain wildcards like '*'.",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "One or more tenants for filtering the result.",
                        "required": false,
                        "type": "array",
                        "items": { "type": "string" },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ResultPage«PersonItemDTO»" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "AboutDataDTO": {
            "type": "object",
            "properties": {
                "authorities": {
                    "type": "array",
                    "description": "All rights of the system user used for this request.",
                    "items": { "type": "string" }
                },
                "dataApiVersion": { "type": "string", "description": "The supported version Partner.Net Data API." },
                "partnerNetVersion": { "type": "string", "description": "The version of the Partner.Net." },
                "tenants": {
                    "type": "array",
                    "description": "All available tenants of the system user used for this request.",
                    "items": { "type": "string" }
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the system user used for this request."
                }
            },
            "title": "AboutDataDTO",
            "description": "Holds information about the Partner.Net Data API and the connected user."
        },
        "ActivePersonCompanyLinkDTO": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique id of the company the person has an employment at."
                },
                "companyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person has an employment at."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The number of the company the person has an employment at."
                }
            },
            "title": "ActivePersonCompanyLinkDTO",
            "description": "Holds minimal information about a employment the person has."
        },
        "ActivePersonFunctionLinkDTO": {
            "type": "object",
            "properties": {
                "brandMatchcode": {
                    "type": "string",
                    "description": "The matchcode of a brand the person has the function for."
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the company the person has the function at."
                },
                "companyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person has/had an function at."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The number of the company the person has/had an function at."
                },
                "mainFunction": {
                    "type": "boolean",
                    "description": "The flag that declares, whether this function is the main function of the person at the specific company or not."
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the function" },
                "tenant": { "type": "string", "description": "A tenant where the function is valid" }
            },
            "title": "ActivePersonFunctionLinkDTO",
            "description": "Holds minimal information about a function the person has."
        },
        "ActivityDataDTO": {
            "type": "object",
            "properties": {
                "brands": {
                    "type": "array",
                    "description": "The brands where the activity is valid",
                    "items": { "$ref": "#/definitions/BrandLinkDTO" }
                },
                "companyTypes": {
                    "type": "array",
                    "description": "The company types where the activity is valid",
                    "items": { "$ref": "#/definitions/CompanyTypeLinkDTO" }
                },
                "contractTypes": {
                    "type": "array",
                    "description": "The contract types where the activity is valid",
                    "items": { "$ref": "#/definitions/ContractTypeLinkDTO" }
                },
                "descriptions": {
                    "type": "object",
                    "description": "The description of the activity with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "labels": {
                    "type": "object",
                    "description": "The label of the activity with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the activity was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the activity" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the activity is valid",
                    "items": { "type": "string" }
                }
            },
            "title": "ActivityDataDTO",
            "description": "Holds all information about an activity"
        },
        "ActivityItemDTO": {
            "type": "object",
            "properties": {
                "brands": {
                    "type": "array",
                    "description": "The brands where the activity is valid",
                    "items": { "$ref": "#/definitions/BrandLinkDTO" }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the activity in the requested language"
                },
                "label": { "type": "string", "description": "The label of the activity in the requested language" },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the activity was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the activity" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the activity is valid",
                    "items": { "type": "string" }
                }
            },
            "title": "ActivityItemDTO",
            "description": "Holds basic information about an activity"
        },
        "ActivityLinkDTO": {
            "type": "object",
            "properties": {
                "matchcode": { "type": "string", "description": "The unique matchcode of the activity" },
                "tenant": { "type": "string", "description": "A tenant where the activity is valid" }
            },
            "title": "ActivityLinkDTO",
            "description": "Holds minimal information about an activity"
        },
        "AdvisorTypeDataDTO": {
            "type": "object",
            "properties": {
                "descriptions": {
                    "type": "object",
                    "description": "The description of the advisor type with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "labels": {
                    "type": "object",
                    "description": "The label of the advisor type with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the advisor type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the advisor type" }
            },
            "title": "AdvisorTypeDataDTO",
            "description": "Holds all information about an advisor type"
        },
        "AdvisorTypeItemDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the advisor type in the requested language"
                },
                "label": { "type": "string", "description": "The label of the advisor type in the requested language" },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the advisor type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the advisor type" }
            },
            "title": "AdvisorTypeItemDTO",
            "description": "Holds basic information about an advisor type"
        },
        "ApplicationDataDTO": {
            "type": "object",
            "properties": {
                "descriptions": {
                    "type": "object",
                    "description": "The description of the application with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "labels": {
                    "type": "object",
                    "description": "The label of the application with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the application was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the application" }
            },
            "title": "ApplicationDataDTO",
            "description": "Holds all information about an application"
        },
        "ApplicationItemDTO": {
            "type": "object",
            "properties": {
                "label": { "type": "string", "description": "The label of the application in the requested language" },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the application was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the application" }
            },
            "title": "ApplicationItemDTO",
            "description": "Holds basic information about an application"
        },
        "BrandDataDTO": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": "The label of the brand with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the brand was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the brand" },
                "ordinal": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ordinal of the brand for sorting"
                },
                "path": {
                    "type": "string",
                    "description": "The simplified name of the brand when used as path, e.g. 'vw', 'audi', 'vwlnf'"
                },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the brand is valid",
                    "items": { "type": "string" }
                }
            },
            "title": "BrandDataDTO",
            "description": "Holds all information about a brand"
        },
        "BrandItemDTO": {
            "type": "object",
            "properties": {
                "label": { "type": "string", "description": "The label of the brand in the requested language" },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the brand was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the brand" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the brand is valid",
                    "items": { "type": "string" }
                }
            },
            "title": "BrandItemDTO",
            "description": "Holds basic information about a brand"
        },
        "BrandLinkDTO": {
            "type": "object",
            "properties": {
                "matchcode": { "type": "string", "description": "The unique matchcode of the brand" },
                "tenant": { "type": "string", "description": "A tenant where the brand is valid" }
            },
            "title": "BrandLinkDTO",
            "description": "Holds minimal information about a brand"
        },
        "Character": { "type": "object", "title": "Character" },
        "CompanyBrandLinkDTO": {
            "type": "object",
            "properties": {
                "matchcode": {
                    "type": "string",
                    "description": "The matchcode of the brand (fits the matchcodes of the brands interface)"
                },
                "tenant": { "type": "string", "description": "The tenant (Portal-ID) where this brand is valid." },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from when this brand is/was valid for the company."
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time till when this brand is/was valid for the company."
                }
            },
            "title": "CompanyBrandLinkDTO",
            "description": "Holds minimal information about the brand of a company. The matchcode fits the matchcodes of the brands interface."
        },
        "CompanyContractStateLinkDTO": {
            "type": "object",
            "properties": {
                "brandMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the brand this contract state is assigned to."
                },
                "contractTypeMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the contract type this contract state is assigned to."
                },
                "matchcode": {
                    "type": "string",
                    "description": "The matchcode of the contract state (fits the matchcodes of the contract state interface)"
                },
                "tenant": {
                    "type": "string",
                    "description": "The tenant (Portal-ID) where this contract state is valid."
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from when this contract state is/was valid for the company."
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time till when this contract state is/was valid for the company."
                }
            },
            "title": "CompanyContractStateLinkDTO",
            "description": "Holds minimal information about the contract state of a company. The matchcode fits to the matchcodes of the contract state interface."
        },
        "CompanyContractTypeLinkDTO": {
            "type": "object",
            "properties": {
                "brandMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the brand this contract type is assigned to."
                },
                "kvps": {
                    "type": "boolean",
                    "description": "If this flag is set to true, the contract takes part in the KVPS."
                },
                "limitedExtentFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from when this contract type is/was valid to a limited extent."
                },
                "matchcode": {
                    "type": "string",
                    "description": "The matchcode of the contract type (fits the matchcodes of the contract types interface)"
                },
                "tenant": {
                    "type": "string",
                    "description": "The tenant (Portal-ID) where this contract type reference is valid."
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from when this contract type is/was valid for the company."
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time till when this contract type is/was valid for the company."
                }
            },
            "title": "CompanyContractTypeLinkDTO",
            "description": "Holds minimal information about the contract type of a company. The matchcode fits to the matchcodes of the contract types interface."
        },
        "CompanyDataDTO": {
            "type": "object",
            "properties": {
                "additionalNumbers": {
                    "type": "array",
                    "description": "All additional numbers of the company. The matchcode of each item fits to the matchcodes of the company number types interface.",
                    "items": { "$ref": "#/definitions/CompanyNumberLinkDTO" }
                },
                "administrativeTenant": {
                    "type": "string",
                    "description": "The tenant (Portal-ID), in which this company gets administrated."
                },
                "bic": { "type": "string", "description": "The BIC of the company." },
                "brands": {
                    "type": "array",
                    "description": "All brands assigned to the company. The matchcode of each item fits to the matchcodes of the brands interface.",
                    "items": { "$ref": "#/definitions/CompanyBrandLinkDTO" }
                },
                "certificateNumber": {
                    "type": "string",
                    "description": "The number of the certificate of the company."
                },
                "certificateType": { "type": "string", "description": "The certificate type of the company." },
                "city": {
                    "type": "string",
                    "description": "The name of the city as defined in the address of the company."
                },
                "commercialRegisterNumber": {
                    "type": "string",
                    "description": "The number of the company in the commerical register (also knwon as FB)."
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique id of the company (also known as GP-ID)."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The company number. In most cases, this is the same as the SAP number."
                },
                "contractStates": {
                    "type": "array",
                    "description": "All contract states assigned to the company. The matchcode of each item fits to the matchcodes of the contract states interface.",
                    "items": { "$ref": "#/definitions/CompanyContractStateLinkDTO" }
                },
                "contractTypes": {
                    "type": "array",
                    "description": "All contract types assigned to the company. The matchcode of each item fits to the matchcodes of the contract types interface.",
                    "items": { "$ref": "#/definitions/CompanyContractTypeLinkDTO" }
                },
                "country": {
                    "type": "string",
                    "description": "The name of the country as defined in the address of the company."
                },
                "countryCode": {
                    "type": "string",
                    "description": "The code of the country as defined in the address of the company."
                },
                "dataProcessingRegisterNumber": {
                    "type": "string",
                    "description": "The number of the company as defined in the data processing register (also known as DVR)."
                },
                "email": { "type": "string", "description": "The email address of the company." },
                "externalBrands": {
                    "type": "array",
                    "description": "All external brands assigned to the company.",
                    "items": { "$ref": "#/definitions/CompanyExternalBrandDataDTO" }
                },
                "faxNumber": { "type": "string", "description": "The fax number of the company." },
                "groupMembers": {
                    "type": "array",
                    "description": "Groups this company is part of.",
                    "items": { "$ref": "#/definitions/CompanyGroupMemberLinkDTO" }
                },
                "homepage": { "type": "string", "description": "The homepage of the company." },
                "iban": { "type": "string", "description": "The IBAN of the company." },
                "jurisdiction": {
                    "type": "string",
                    "description": "The venue jurisdiction the company is part of because of its geographical position."
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date of the last occasion, when the data of the this company has been modified."
                },
                "legalFormMatchcode": { "type": "string", "description": "The matchcode of the legal form." },
                "location": {
                    "description": "The logitude and latitude of the companies location.",
                    "$ref": "#/definitions/GeoPoint"
                },
                "marketingName": { "type": "string", "description": "The marketing name of the company." },
                "matchcode": {
                    "type": "string",
                    "description": "The matchcode of the external brand (fits the matchcodes of the external brand interface."
                },
                "mobileNumber": { "type": "string", "description": "The mobile phone number of the company." },
                "name": { "type": "string", "description": "The name of the company." },
                "nameAffix": { "type": "string", "description": "The name affix of the company." },
                "phoneNumber": { "type": "string", "description": "The phone number of the company." },
                "postal": {
                    "type": "string",
                    "description": "The postal address of the company. In contrast to the other address fields, this may contain a simplifcation of the address, like a post office box."
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code of the city as defined in the address of the company."
                },
                "region": { "type": "string", "description": "The region as defined in the address of the company." },
                "sapNumber": { "type": "string", "description": "The SAP number of the of the company." },
                "speedDial": { "type": "string", "description": "The speed dial of the company." },
                "street": {
                    "type": "string",
                    "description": "The name of the street as defined in the address of the company."
                },
                "tenants": {
                    "type": "array",
                    "description": "Valid tenants of the company (also known as Portal-ID).",
                    "items": { "type": "string" }
                },
                "types": {
                    "type": "array",
                    "description": "All company types assigned to the company. The matchcode of each item fits to the matchcodes of the company types interface.",
                    "items": { "$ref": "#/definitions/CompanyTypeLinkDTO" }
                },
                "vatIdNumber": { "type": "string", "description": "The vat ID of the company." }
            },
            "title": "CompanyDataDTO",
            "description": "Holds all information about one company."
        },
        "CompanyExternalBrandDataDTO": {
            "type": "object",
            "properties": {
                "local": {
                    "type": "boolean",
                    "description": "The local flag. Does local things unknown to most people, especially those writing this documentation."
                },
                "matchcode": {
                    "type": "string",
                    "description": "The matchcode of the external brand (fits the matchcodes of the external brand interface."
                },
                "sales": {
                    "type": "boolean",
                    "description": "This flag declares, whether this external brand is sold by the company."
                },
                "service": {
                    "type": "boolean",
                    "description": "This flag declares, whether this external brand is serviced by the company."
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from when this external brand is/was valid for the company."
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time till when this external brand is/was valid for the company."
                }
            },
            "title": "CompanyExternalBrandDataDTO",
            "description": "Holds minimal information about an external brand of the company. The matchcode fits the matchcodes of the external brand interface."
        },
        "CompanyGroupDataDTO": {
            "type": "object",
            "properties": {
                "leadingCompanyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique id of the company that is leading the company group."
                },
                "leadingCompanyMatchcode": {
                    "type": "string",
                    "description": "The (almost-unique) matchcode of the company that is leading the company group."
                },
                "leadingCompanyNumber": {
                    "type": "string",
                    "description": "The (non-unique) number of the company that is leading the company group."
                },
                "members": {
                    "type": "array",
                    "description": "The members of the company group",
                    "items": { "$ref": "#/definitions/CompanyGroupMemberLinkDTO" }
                }
            },
            "title": "CompanyGroupDataDTO",
            "description": "Holds all information about a company group."
        },
        "CompanyGroupMemberLinkDTO": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique id of the company that is in the company group."
                },
                "companyMatchcode": {
                    "type": "string",
                    "description": "The (almost-unique) matchcode of the company that is in the company group."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The (non-unique) number of the company that is in the company group."
                },
                "groupType": {
                    "type": "string",
                    "description": "The unique matchcode of the company group type of the company group"
                }
            },
            "title": "CompanyGroupMemberLinkDTO",
            "description": "Holds minimal information about a company group member"
        },
        "CompanyGroupTypeDataDTO": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": "The label of the company group type with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the company group type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the company group type" }
            },
            "title": "CompanyGroupTypeDataDTO",
            "description": "Holds all information about a company group type"
        },
        "CompanyGroupTypeItemDTO": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "The label of the company group type in the requested language"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the company group type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the company group type" }
            },
            "title": "CompanyGroupTypeItemDTO",
            "description": "Holds basic information about a company group type"
        },
        "CompanyItemDTO": {
            "type": "object",
            "properties": {
                "administrativeTenant": {
                    "type": "string",
                    "description": "The tenant (Portal-ID), in which this company gets administrated."
                },
                "brands": {
                    "type": "array",
                    "description": "All brands assigned to the company. The matchcode of each item fits to the matchcodes of the brands interface.",
                    "items": { "$ref": "#/definitions/CompanyBrandLinkDTO" }
                },
                "city": {
                    "type": "string",
                    "description": "The name of the city as defined in the address of the company."
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique id of the company (also known as GP-ID)."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The company number. In most cases, this is the same as the SAP number."
                },
                "country": {
                    "type": "string",
                    "description": "The name of the country as defined in the address of the company."
                },
                "countryCode": {
                    "type": "string",
                    "description": "The code of the country as defined in the address of the company."
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date of the last occasion, when the data of the this company has been modified."
                },
                "location": {
                    "description": "The logitude and latitude of the companies location.",
                    "$ref": "#/definitions/GeoPoint"
                },
                "marketingName": { "type": "string", "description": "The marketing name of the company." },
                "matchcode": {
                    "type": "string",
                    "description": "The matchcode of the company (a combination of administrative tenant and company number)"
                },
                "name": { "type": "string", "description": "The name of the company." },
                "nameAffix": { "type": "string", "description": "The name affix of the company." },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code of the city as defined in the address of the company."
                },
                "region": { "type": "string", "description": "The region as defined in the address of the company." },
                "street": {
                    "type": "string",
                    "description": "The name of the street as defined in the address of the company."
                },
                "tenants": {
                    "type": "array",
                    "description": "Valid tenants of the company (also known as Portal-ID).",
                    "items": { "type": "string" }
                },
                "types": {
                    "type": "array",
                    "description": "All company types assigned to the company. The matchcode of each item fits to the matchcodes of the company types interface.",
                    "items": { "$ref": "#/definitions/CompanyTypeLinkDTO" }
                }
            },
            "title": "CompanyItemDTO",
            "description": "Holds basic information about one company."
        },
        "CompanyNumberLinkDTO": {
            "type": "object",
            "properties": {
                "matchcode": {
                    "type": "string",
                    "description": "The matchcode of the additional company number (fits the matchcodes of the company number type interface."
                },
                "number": { "type": "string", "description": "The actual additional company number." }
            },
            "title": "CompanyNumberLinkDTO",
            "description": "Holds minimal information about an additional company number of the company. The matchode fits the matchcodes of the company number type interface."
        },
        "CompanyNumberTypeDataDTO": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": "The label of the company number type with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the company number type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the company number type" }
            },
            "title": "CompanyNumberTypeDataDTO",
            "description": "Holds all information about a company number type"
        },
        "CompanyNumberTypeItemDTO": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "The label of the company number type in the requested language"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the company number type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the company number type" }
            },
            "title": "CompanyNumberTypeItemDTO",
            "description": "Holds basic information about a company number type"
        },
        "CompanyTypeDataDTO": {
            "type": "object",
            "properties": {
                "contractSpecific": {
                    "type": "boolean",
                    "description": "The flag that declares, whether contracts matter for this company type"
                },
                "labels": {
                    "type": "object",
                    "description": "The label of the company type with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the company type was last changed"
                },
                "level": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The level of the company type (The smaller the level is, the higher is the importance)"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the company type" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the company type is valid",
                    "items": { "type": "string" }
                }
            },
            "title": "CompanyTypeDataDTO",
            "description": "Holds all information about a company type"
        },
        "CompanyTypeItemDTO": {
            "type": "object",
            "properties": {
                "label": { "type": "string", "description": "The label of the company type in the requested language" },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the company type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the company type" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the company type is valid",
                    "items": { "type": "string" }
                }
            },
            "title": "CompanyTypeItemDTO",
            "description": "Holds basic information about a company type"
        },
        "CompanyTypeLinkDTO": {
            "type": "object",
            "properties": {
                "matchcode": { "type": "string", "description": "The unique matchcode of the company type" },
                "tenant": { "type": "string", "description": "A tenant where the company type is valid" }
            },
            "title": "CompanyTypeLinkDTO",
            "description": "Holds minimal information about a company type"
        },
        "ContractStateDataDTO": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": "The label of the contract state with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the contract state was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the contract state" }
            },
            "title": "ContractStateDataDTO",
            "description": "Holds all information about a contract state"
        },
        "ContractStateItemDTO": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "The label of the contract state in the requested language"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the contract state was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the contract state" }
            },
            "title": "ContractStateItemDTO",
            "description": "Holds basic information about a contract state"
        },
        "ContractTypeBrandLinkDTO": {
            "type": "object",
            "properties": {
                "matchcode": { "type": "string" },
                "states": { "type": "array", "items": { "type": "string" } },
                "tenant": { "type": "string" }
            },
            "title": "ContractTypeBrandLinkDTO"
        },
        "ContractTypeDataDTO": {
            "type": "object",
            "properties": {
                "brands": {
                    "type": "array",
                    "description": "The brands where the contract type is valid",
                    "items": { "$ref": "#/definitions/ContractTypeBrandLinkDTO" }
                },
                "labels": {
                    "type": "object",
                    "description": "The label of the contract type with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the contract type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the contract type" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the contract type is valid",
                    "items": { "type": "string" }
                },
                "type": { "type": "string", "description": "The type of the contract" }
            },
            "title": "ContractTypeDataDTO",
            "description": "Holds all information about a contract type"
        },
        "ContractTypeItemDTO": {
            "type": "object",
            "properties": {
                "brands": {
                    "type": "array",
                    "description": "The brands where the contract type is valid",
                    "items": { "$ref": "#/definitions/ContractTypeBrandLinkDTO" }
                },
                "label": {
                    "type": "string",
                    "description": "The label of the contract type in the requested language"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the contract type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the contract type" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the contract type is valid",
                    "items": { "type": "string" }
                },
                "type": { "type": "string", "description": "The type of the contract" }
            },
            "title": "ContractTypeItemDTO",
            "description": "Holds basic information about a contract type"
        },
        "ContractTypeLinkDTO": {
            "type": "object",
            "properties": {
                "matchcode": { "type": "string", "description": "The unique matchcode of the contract type" },
                "tenant": { "type": "string", "description": "A tenant where the contract type is valid" }
            },
            "title": "ContractTypeLinkDTO",
            "description": "Holds minimal information about a contract type"
        },
        "ExternalBrandDataDTO": {
            "type": "object",
            "properties": {
                "id": { "type": "string", "description": "The unique id of the external brand" },
                "labels": {
                    "type": "object",
                    "description": "The label of the external brand with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the external brand was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the external brand" }
            },
            "title": "ExternalBrandDataDTO",
            "description": "Holds all information about an external brand"
        },
        "ExternalBrandItemDTO": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "The label of the external brand in the requested language"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the external brand was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the external brand" }
            },
            "title": "ExternalBrandItemDTO",
            "description": "Holds basic information about an external brand"
        },
        "File": {
            "type": "object",
            "properties": {
                "absolute": { "type": "boolean" },
                "absoluteFile": { "$ref": "#/definitions/File" },
                "absolutePath": { "type": "string" },
                "canonicalFile": { "$ref": "#/definitions/File" },
                "canonicalPath": { "type": "string" },
                "directory": { "type": "boolean" },
                "file": { "type": "boolean" },
                "freeSpace": { "type": "integer", "format": "int64" },
                "hidden": { "type": "boolean" },
                "name": { "type": "string" },
                "parent": { "type": "string" },
                "parentFile": { "$ref": "#/definitions/File" },
                "path": { "type": "string" },
                "totalSpace": { "type": "integer", "format": "int64" },
                "usableSpace": { "type": "integer", "format": "int64" }
            },
            "title": "File"
        },
        "FunctionDataDTO": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "description": "The activities the function has",
                    "items": { "$ref": "#/definitions/ActivityLinkDTO" }
                },
                "brands": {
                    "type": "array",
                    "description": "The brands where the function is valid",
                    "items": { "$ref": "#/definitions/BrandLinkDTO" }
                },
                "companyTypes": {
                    "type": "array",
                    "description": "The company types where the function is valid",
                    "items": { "$ref": "#/definitions/CompanyTypeLinkDTO" }
                },
                "contractTypes": {
                    "type": "array",
                    "description": "The contract types where the function is valid",
                    "items": { "$ref": "#/definitions/ContractTypeLinkDTO" }
                },
                "descriptions": {
                    "type": "object",
                    "description": "The description of the function with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "labels": {
                    "type": "object",
                    "description": "The label of the function with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the function was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the function" },
                "numberTypes": {
                    "type": "array",
                    "description": "The contract number where the function is valid",
                    "items": { "$ref": "#/definitions/NumberTypeLinkDTO" }
                },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the function is valid",
                    "items": { "type": "string" }
                }
            },
            "title": "FunctionDataDTO",
            "description": "Holds all information about a function"
        },
        "FunctionItemDTO": {
            "type": "object",
            "properties": {
                "brands": {
                    "type": "array",
                    "description": "The brands where the function is valid",
                    "items": { "$ref": "#/definitions/BrandLinkDTO" }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the function in the requested language"
                },
                "label": { "type": "string", "description": "The label of the function in the requested language" },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the function was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the function" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the function is valid",
                    "items": { "type": "string" }
                }
            },
            "title": "FunctionItemDTO",
            "description": "Holds basic information about a function"
        },
        "GeoPoint": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number",
                    "format": "double",
                    "description": "The latitude of the geographical point"
                },
                "lon": {
                    "type": "number",
                    "format": "double",
                    "description": "The longitude of the geographical point"
                }
            },
            "title": "GeoPoint",
            "description": "Holds information about a geographical point on the earth"
        },
        "InputStream": { "type": "object", "title": "InputStream" },
        "InputStreamResource": {
            "type": "object",
            "properties": {
                "description": { "type": "string" },
                "file": { "$ref": "#/definitions/File" },
                "filename": { "type": "string" },
                "inputStream": { "$ref": "#/definitions/InputStream" },
                "open": { "type": "boolean" },
                "readable": { "type": "boolean" },
                "uri": { "$ref": "#/definitions/URI" },
                "url": { "$ref": "#/definitions/URL" }
            },
            "title": "InputStreamResource"
        },
        "Locale": {
            "type": "object",
            "properties": {
                "country": { "type": "string" },
                "displayCountry": { "type": "string" },
                "displayLanguage": { "type": "string" },
                "displayName": { "type": "string" },
                "displayScript": { "type": "string" },
                "displayVariant": { "type": "string" },
                "extensionKeys": { "type": "array", "items": { "$ref": "#/definitions/Character" } },
                "iso3Country": { "type": "string" },
                "iso3Language": { "type": "string" },
                "language": { "type": "string" },
                "script": { "type": "string" },
                "unicodeLocaleAttributes": { "type": "array", "items": { "type": "string" } },
                "unicodeLocaleKeys": { "type": "array", "items": { "type": "string" } },
                "variant": { "type": "string" }
            },
            "title": "Locale"
        },
        "NumberTypeDataDTO": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": "The label of the function with all existing translations",
                    "additionalProperties": { "type": "string" }
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the function was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the function" }
            },
            "title": "NumberTypeDataDTO",
            "description": "Holds all information about a function"
        },
        "NumberTypeItemDTO": {
            "type": "object",
            "properties": {
                "label": { "type": "string", "description": "The label of the number type in the requested language" },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the number type was last changed"
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the number type" }
            },
            "title": "NumberTypeItemDTO",
            "description": "Holds basic information about a number type"
        },
        "NumberTypeLinkDTO": {
            "type": "object",
            "properties": {
                "matchcode": { "type": "string", "description": "The unique matchcode of the number type" },
                "tenant": { "type": "string", "description": "A tenant where the number type is valid" }
            },
            "title": "NumberTypeLinkDTO",
            "description": "Holds minimal information about a number type"
        },
        "PersonActivityLinkDTO": {
            "type": "object",
            "properties": {
                "brandMatchcode": {
                    "type": "string",
                    "description": "A unique matchcode of the brand where the activity is valid."
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique id of the company the person has the activity at."
                },
                "companyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person has/had an activity at."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The number of the company the person has/had an activity at."
                },
                "dueToFunction": {
                    "type": "boolean",
                    "description": "The flag that declares, whether this activity is assigned to the person due to a function or not."
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the activity" },
                "tenant": { "type": "string", "description": "A tenant where the activity is valid" }
            },
            "title": "PersonActivityLinkDTO",
            "description": "Holds minimal information about a activity of the person."
        },
        "PersonAdvisorAssignmentLinkDTO": {
            "type": "object",
            "properties": {
                "brandMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the brand where the person is advisor for."
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique id of the company the person is advisor for."
                },
                "companyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person has/had is advisor for."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The number of the company the person has/had is advisor for."
                },
                "divisionMatchcode": { "type": "string", "description": "The matchcode of the advisor division." },
                "matchcode": { "type": "string", "description": "The matchcode of the advisor type." },
                "tenant": { "type": "string", "description": "A tenant where the advisor assignment is valid." }
            },
            "title": "PersonAdvisorAssignmentLinkDTO",
            "description": "Holds an advisor assignment of the person."
        },
        "PersonCompanyLinkDTO": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique id of the company the person has an employment at."
                },
                "companyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person has an employment at."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The number of the company the person has an employment at."
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from when this person has/had an employment at the company."
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time till when this brand has/had an employment at the company."
                }
            },
            "title": "PersonCompanyLinkDTO",
            "description": "Holds minimal information about a employment the person has/had."
        },
        "PersonDataDTO": {
            "type": "object",
            "properties": {
                "academicTitle": { "type": "string", "description": "The academic title of the person" },
                "academicTitlePostNominal": {
                    "type": "string",
                    "description": "The academic title of the person, that's placed after the name."
                },
                "activities": {
                    "type": "array",
                    "description": "The activities the person has at specific companies",
                    "items": { "$ref": "#/definitions/PersonActivityLinkDTO" }
                },
                "administrativeTenant": {
                    "type": "string",
                    "description": "The tenant, in which this person is administrated"
                },
                "advisorAssignments": {
                    "type": "array",
                    "description": "The advisor assignments of the person for specific companies",
                    "items": { "$ref": "#/definitions/PersonAdvisorAssignmentLinkDTO" }
                },
                "automaticDeletion": {
                    "type": "boolean",
                    "description": "Indicates, whether the person will get deleted automatically in the near future"
                },
                "birthdate": { "type": "string", "format": "date", "description": "The birthdate of the person" },
                "checksum": {
                    "type": "string",
                    "description": "The checksum of all data of a person, which is needed to detect changes"
                },
                "companies": {
                    "type": "array",
                    "description": "The companies the person has employments at",
                    "items": { "$ref": "#/definitions/PersonCompanyLinkDTO" }
                },
                "contactCompanyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the company the person is mainly busy at"
                },
                "contactCompanyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person is mainly busy at"
                },
                "contactCompanyNumber": {
                    "type": "string",
                    "description": "The number of the company the person is mainly busy at"
                },
                "controllingArea": { "type": "string", "description": "The controlling area the person belongs to" },
                "costCenter": { "type": "string", "description": "The cost center of the person" },
                "email": { "type": "string", "description": "The business email of the person" },
                "externalId": { "type": "string", "description": "The external id of the person" },
                "faxNumber": { "type": "string", "description": "The fax number of the person at work" },
                "firstName": { "type": "string", "description": "The first name of the person" },
                "formOfAddress": {
                    "type": "string",
                    "description": "The form of the adress the person prefers",
                    "enum": ["UNIVERSAL", "FEMININE", "MASCULINE"]
                },
                "functions": {
                    "type": "array",
                    "description": "The functions the person has at specific companies",
                    "items": { "$ref": "#/definitions/PersonFunctionLinkDTO" }
                },
                "guid": { "type": "string", "description": "The global user id of the person" },
                "id": { "type": "integer", "format": "int32", "description": "The unique id of the person" },
                "jobDescription": {
                    "type": "string",
                    "description": "The description of the job the person mainly does"
                },
                "languages": {
                    "type": "array",
                    "description": "The languages known to the user, ordered by preference",
                    "items": { "$ref": "#/definitions/PersonLanguageLinkDTO" }
                },
                "lastName": { "type": "string", "description": "The last name of the person" },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the person was last changed"
                },
                "mobileNumber": {
                    "type": "string",
                    "description": "The mobile phone number of the person regarding business"
                },
                "numbers": {
                    "type": "array",
                    "description": "The number types the person has at specific companies",
                    "items": { "$ref": "#/definitions/PersonNumberTypeLinkDTO" }
                },
                "personId": { "type": "integer", "format": "int32", "description": "The unique id of the person" },
                "personnelDepartment": {
                    "type": "string",
                    "description": "The personnel department the person belongs to"
                },
                "personnelNumber": { "type": "string", "description": "The personnel number of the person" },
                "phoneNumber": { "type": "string", "description": "The phone number of the person at work" },
                "portraitAvailable": {
                    "type": "boolean",
                    "description": "Indicates, whether the person has a portrait available or not"
                },
                "preferredUserId": { "type": "string", "description": "The preferred user id of the person" },
                "supervisorPersonnelNumber": {
                    "type": "string",
                    "description": "The personnel number of the supervisor of the person"
                },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the person is valid",
                    "items": { "type": "string" }
                },
                "username": { "type": "string", "description": "The username of the person." }
            },
            "title": "PersonDataDTO",
            "description": "Holds all information about a person"
        },
        "PersonFunctionLinkDTO": {
            "type": "object",
            "properties": {
                "brandMatchcode": {
                    "type": "string",
                    "description": "The matchcode of a brand the person has the function for."
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the company the person has the function at."
                },
                "companyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person has/had an function at."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The number of the company the person has/had an function at."
                },
                "mainFunction": {
                    "type": "boolean",
                    "description": "The flag that declares, whether this function is the main function of the person at the specific company or not."
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the function" },
                "tenant": { "type": "string", "description": "A tenant where the function is valid" },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from when this person has/had an employment at the company."
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time till when this brand has/had an employment at the company."
                }
            },
            "title": "PersonFunctionLinkDTO",
            "description": "Holds minimal information about a function the person has."
        },
        "PersonItemDTO": {
            "type": "object",
            "properties": {
                "academicTitle": { "type": "string", "description": "The academic title of the person." },
                "academicTitlePostNominal": {
                    "type": "string",
                    "description": "The academic title of the person, placed after the name."
                },
                "administrativeTenant": {
                    "type": "string",
                    "description": "The tenant, in which this person is administrated."
                },
                "birthdate": { "type": "string", "format": "date", "description": "The birthdate of the person." },
                "companies": {
                    "type": "array",
                    "description": "The companies the person has employments at",
                    "items": { "$ref": "#/definitions/ActivePersonCompanyLinkDTO" }
                },
                "contactCompanyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the company the person is mainly busy at"
                },
                "contactCompanyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person is mainly busy at"
                },
                "contactCompanyNumber": {
                    "type": "string",
                    "description": "The number of the company the person is mainly busy at"
                },
                "email": { "type": "string", "description": " The email of the person." },
                "externalId": { "type": "string", "description": "The external id of the person" },
                "firstName": { "type": "string", "description": "The first name of the person." },
                "formOfAddress": {
                    "type": "string",
                    "description": "The form of the adress the person prefers.",
                    "enum": ["UNIVERSAL", "FEMININE", "MASCULINE"]
                },
                "functions": {
                    "type": "array",
                    "description": "The function the person has",
                    "items": { "$ref": "#/definitions/ActivePersonFunctionLinkDTO" }
                },
                "guid": { "type": "string", "description": "The global user id of the person" },
                "lastName": { "type": "string", "description": "The last name of the person." },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time and date when the person was last changed."
                },
                "personId": { "type": "integer", "format": "int32", "description": "The unique id of the person." },
                "personnelNumber": { "type": "string", "description": "The personnel number of the person." },
                "portraitAvailable": {
                    "type": "boolean",
                    "description": "Indicates, whether the person has a portrait available or not"
                },
                "preferredUserId": { "type": "string", "description": "The preferred user id of the person" },
                "tenants": {
                    "type": "array",
                    "description": "The tenants where the person is valid.",
                    "items": { "type": "string" }
                },
                "username": { "type": "string", "description": "The username of the person." }
            },
            "title": "PersonItemDTO",
            "description": "Holds basic information about a person"
        },
        "PersonLanguageLinkDTO": {
            "type": "object",
            "properties": {
                "language": { "description": "The language as IETF language tag.", "$ref": "#/definitions/Locale" },
                "level": {
                    "type": "string",
                    "description": "The level of competence.",
                    "enum": ["UNDEFINED", "A1", "A2", "B1", "B2", "C1", "C2"]
                }
            },
            "title": "PersonLanguageLinkDTO",
            "description": "Holds a language of the person."
        },
        "PersonNumberTypeLinkDTO": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the company the person has the number at."
                },
                "companyMatchcode": {
                    "type": "string",
                    "description": "The matchcode of the company the person has the number at."
                },
                "companyNumber": {
                    "type": "string",
                    "description": "The number of the company the person has the number at."
                },
                "matchcode": { "type": "string", "description": "The unique matchcode of the number type" },
                "number": { "type": "string", "description": "The actual number, that fits the number type." },
                "tenant": { "type": "string", "description": "A tenant where the number type is valid" },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from when this person has/had an employment at the company."
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time till when this brand has/had an employment at the company."
                }
            },
            "title": "PersonNumberTypeLinkDTO",
            "description": "Holds minimal information about a person."
        },
        "ResultPage«ActivityDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ActivityDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ActivityDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ActivityItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ActivityItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ActivityItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«AdvisorTypeDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/AdvisorTypeDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«AdvisorTypeDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«AdvisorTypeItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/AdvisorTypeItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«AdvisorTypeItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ApplicationDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ApplicationDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ApplicationDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ApplicationItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ApplicationItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ApplicationItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«BrandDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/BrandDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«BrandDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«BrandItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/BrandItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«BrandItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyGroupDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyGroupDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyGroupDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyGroupTypeDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyGroupTypeDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyGroupTypeDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyGroupTypeItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyGroupTypeItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyGroupTypeItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyNumberTypeDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyNumberTypeDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyNumberTypeDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyNumberTypeItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyNumberTypeItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyNumberTypeItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyTypeDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyTypeDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyTypeDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«CompanyTypeItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/CompanyTypeItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«CompanyTypeItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ContractStateDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ContractStateDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ContractStateDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ContractStateItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ContractStateItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ContractStateItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ContractTypeDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ContractTypeDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ContractTypeDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ContractTypeItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ContractTypeItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ContractTypeItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ExternalBrandDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ExternalBrandDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ExternalBrandDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«ExternalBrandItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/ExternalBrandItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«ExternalBrandItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«FunctionDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/FunctionDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«FunctionDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«FunctionItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/FunctionItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«FunctionItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«NumberTypeDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/NumberTypeDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«NumberTypeDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«NumberTypeItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/NumberTypeItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«NumberTypeItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«PersonDataDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/PersonDataDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«PersonDataDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "ResultPage«PersonItemDTO»": {
            "type": "object",
            "properties": {
                "items": { "type": "array", "items": { "$ref": "#/definitions/PersonItemDTO" } },
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of items that each page can hold"
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of pages, that the search/find operation found"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the current page (the index is 0-based)"
                },
                "scrollId": { "type": "string" },
                "totalNumberOfItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total amount of items that the search/find operation found"
                }
            },
            "title": "ResultPage«PersonItemDTO»",
            "description": "Holds results of a search or find operation with paging information"
        },
        "URI": {
            "type": "object",
            "properties": {
                "absolute": { "type": "boolean" },
                "authority": { "type": "string" },
                "fragment": { "type": "string" },
                "host": { "type": "string" },
                "opaque": { "type": "boolean" },
                "path": { "type": "string" },
                "port": { "type": "integer", "format": "int32" },
                "query": { "type": "string" },
                "rawAuthority": { "type": "string" },
                "rawFragment": { "type": "string" },
                "rawPath": { "type": "string" },
                "rawQuery": { "type": "string" },
                "rawSchemeSpecificPart": { "type": "string" },
                "rawUserInfo": { "type": "string" },
                "scheme": { "type": "string" },
                "schemeSpecificPart": { "type": "string" },
                "userInfo": { "type": "string" }
            },
            "title": "URI"
        },
        "URL": {
            "type": "object",
            "properties": {
                "authority": { "type": "string" },
                "content": { "type": "object" },
                "defaultPort": { "type": "integer", "format": "int32" },
                "file": { "type": "string" },
                "host": { "type": "string" },
                "path": { "type": "string" },
                "port": { "type": "integer", "format": "int32" },
                "protocol": { "type": "string" },
                "query": { "type": "string" },
                "ref": { "type": "string" },
                "userInfo": { "type": "string" }
            },
            "title": "URL"
        }
    }
}
